{"version":3,"names":[],"mappings":"","sources":["carousel/carousel.js"],"sourcesContent":["const carousel_single = {\n  cssEase: 'ease-in-out',\n  dots: true,\n  lazyLoad: 'progressive'\n};\n\nconst carousel_center = {\n  cssEase: 'ease-in-out',\n  lazyLoad: 'progressive',\n  centerMode: true,\n  dots: true,\n  centerPadding: '110px',\n  sidesToShow: 3,\n  arrows: true,\n  responsive: [\n    {\n      breakpoint: 768,\n      settings: {\n        centerMode: false,\n        slidesToShow: 1\n      }\n    },\n    {\n      breakpoint: 480,\n      settings: {\n        centerMode: false,\n        slidesToShow: 1\n      }\n    }\n  ]\n};\n\nconst carousel = () => {\n  const $carousels = $('.carousel');\n  let config = carousel_single; // default configuration\n  if ($carousels.length < 1) return; \n\n  const positionArrowsSingle = (slick) => {\n    const $currentSlide = $(slick.$slides[slick.currentSlide]);\n    const $currentImage = $currentSlide.find('img');\n    const imgHeight = $currentImage.height();\n    const buttonTop = imgHeight / 2;\n    const buttons = slick.$nextArrow.add(slick.$prevArrow);\n    buttons.css({\n      top: buttonTop\n    });\n  };\n\n  const positionArrowsCentered = (slick) => {\n    console.log(\"PosArrowCenter\");\n    const $currentSlide = $(slick.$slides[slick.currentSlide]);\n    const $currentImage = $currentSlide.find('img');\n    const $currentTrack = slick.$slideTrack;\n    const imgHeight = $currentImage.height();\n    const containerHeight = imgHeight * 1.105; // magic number matches the scale factor from the scss\n\n    if (imgHeight > 0) {\n      const padding = (containerHeight - imgHeight) / 2;\n      const buttonTop = (containerHeight * .5);\n      const buttons = slick.$nextArrow.add(slick.$prevArrow);\n      buttons.css({\n        top: buttonTop\n      });\n      $currentTrack.css({\n        paddingTop: padding\n      });\n      \n    }\n  };\n  \n\n  $carousels.on('init setPosition afterChange', (e, slick) => {\n    const cl = e.currentTarget.classList;\n    if (cl.contains('carousel--single')) {\n      positionArrowsSingle(slick);\n    } else if (cl.contains('carousel--center')) {\n      positionArrowsCentered(slick);\n    }\n  });\n\n  $carousels.map((index, elem) => {\n    if (elem.classList.contains('carousel--center')) {\n      config = carousel_center;\n    } else {\n      config = carousel_single;\n    }\n    $(elem).slick(config);\n  });\n};\n"],"file":"carousel.js"}